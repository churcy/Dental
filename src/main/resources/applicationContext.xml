<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/aop   
                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
                        http://www.springframework.org/schema/tx   
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
                        >
    <!-- 开启注解配置 -->  
	<context:component-scan base-package="com.tinytree" />
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 生产环境配置 -->
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 数据源定义,使用proxool连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!--<property name="driver" value="${jdbc.driverClass}" />-->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />
	</bean>
		
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
	</bean>
 	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource"/>
	  <property name="mapperLocations"  value="classpath*:com/tinytree/dao/mapper/*.xml"/>
	  <property name="typeAliasesPackage" value="com.tinytree.entity"/>
	  <property name="configurationProperties">
			<props>
				<prop key="mapUnderscoreToCamelCase">true</prop>
				<prop key="aggressiveLazyLoading">true</prop>
			</props>
		</property>	
	  <property name="plugins">
	    <array>
	      <bean class="com.tinytree.interceptor.EntityInterceptor"/>
	      <bean class="com.github.pagehelper.PageHelper">
	        <property name="properties">
	          <value>
	            dialect=hsqldb
	          </value>
	        </property>
	      </bean>
	    </array>
  	  </property>
	</bean>
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.tinytree.dao"/>
	    <property name="markerInterface" value="com.tinytree.dao.BaseDao"></property>
  		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> 
  		<property name="properties">
  			<value>
  				mappers=com.tinytree.dao.BaseDao
  				INDENTITY=MYSQL
  			</value>
  		</property>
  		
	</bean>  
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tinytree.dao.mapper" />
    </bean>
	<!-- 异步数据处理  messageHandlerService -->
	<bean id="messageHandlerService" 
 	init-method="init" class="com.tinytree.handler.MessageHandlerService">
 	</bean>
 	
	<bean name="messageHandlerMap" class="java.util.concurrent.ConcurrentHashMap">
  		<constructor-arg>
  		 	<map>
    			<entry key="REQUEST" value-ref="requestLogHandler" />
    			<entry key="REMIND" value-ref="remindHandler" />
   			</map>
  		</constructor-arg>
 	</bean>
 	
 	<!-- 实施时打开quartz -->
	<!--<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false"  autowire="no">-->
		<!--&lt;!&ndash; <property name="triggers">-->
			<!--<list>-->
				<!--<ref bean="remindDepositTrigger"/>	-->
	      	<!--</list>-->
		<!--</property> &ndash;&gt;-->
		<!--<property name="autoStartup">-->
			<!--<value>true</value>-->
		<!--</property>  -->
	<!--</bean>-->
 </beans>